from mpython import *import musiclevel={'Ez':[1,15,2],'Norm':[2,10,2],'Hard':[3,6,3]}oled.DispChar('Choose level', 0, 0)oled.DispChar('Ez press P', 0, 16)     #先写入缓存区，在(32,16)处显示'hello,world'oled.DispChar('Norm press T or H', 0, 32)         #先写入缓存区，在(35,32)处显示'안녕하세요'oled.DispChar('Hard press N', 0, 48)  #先写入缓存区，在(24,48)处显示'こんにちは世界'oled.show()h=0while h==0:            if touchPad_P.read() <200:                choose='EZ'                h=2            if touchPad_T.read() <200 or touchPad_H.read() <200:                choose='Norm'                h=2            if touchPad_N.read() <200:                choose='Hard'                h=2            class Pong():    def __init__(self):        self.running = True        self.start = False        self.ball_rad = 1        self.bats_position = 0        self.bats_width = level[choose,1]        self.bats_height = 1        self.ball_x = self.bats_width // 2        self.ball_y = 64 - (self.ball_rad + self.bats_height + 1)        self.inc_x, self.inc_y = level[choose,0], level[choose,0]        self.score = 0    def collision(self):        if self.ball_x >= 128 - self.ball_rad or self.ball_x < self.ball_rad:            self.inc_x = -self.inc_x        if self.ball_y >= 64 - (self.ball_rad + self.bats_height) or self.ball_y <= self.ball_rad:            self.inc_y = -self.inc_y    def update(self):        self.ball_x = self.ball_x + self.inc_x        self.ball_y = self.ball_y + self.inc_y        self.bats_position = min(max(self.bats_position, 0), 128 - self.bats_width)    def is_hit(self):        # print('ball:', self.ball_x, self.ball_y, 'bats:', self.bats_position)        if self.ball_y >= 64 - (self.ball_rad + self.bats_height):            if self.ball_x >= self.bats_position + self.bats_width + self.ball_rad or self.ball_x <= self.bats_position - self.ball_rad:                return False            self.score += 1            return True    def run(self):        while self.running:            if button_a.value() == 0 and button_b.value() == 1:                self.bats_position -= level[choose,2]                self.start = True            if button_a.value() == 1 and button_b.value() == 0:                self.bats_position += level[choose,2]                self.start = True            if self.start:                self.update()                self.collision()                if self.is_hit() == False:                    self.running = False                    continue            oled.fill(0)            oled.fill_circle(self.ball_x, self.ball_y, self.ball_rad, 1)            oled.fill_rect(self.bats_position, 64 - self.bats_height, self.bats_width, self.bats_height, 1)            oled.show()        oled.text('Game over!', 20, 20)        oled.text('Score %d' % self.score, 20, 32)        oled.show()if h == 2:    pong = Pong()    pong.run()